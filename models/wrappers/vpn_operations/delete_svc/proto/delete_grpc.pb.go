// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v5.26.1
// source: delete_svc.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	DeleteClientService_DeleteClient_FullMethodName = "/delete_svc.DeleteClientService/DeleteClient"
)

// DeleteClientServiceClient is the client API for DeleteClientService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type DeleteClientServiceClient interface {
	DeleteClient(ctx context.Context, in *DeleteClientRequest, opts ...grpc.CallOption) (*DeleteClientResponse, error)
}

type deleteClientServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDeleteClientServiceClient(cc grpc.ClientConnInterface) DeleteClientServiceClient {
	return &deleteClientServiceClient{cc}
}

func (c *deleteClientServiceClient) DeleteClient(ctx context.Context, in *DeleteClientRequest, opts ...grpc.CallOption) (*DeleteClientResponse, error) {
	out := new(DeleteClientResponse)
	err := c.cc.Invoke(ctx, DeleteClientService_DeleteClient_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeleteClientServiceServer is the server API for DeleteClientService service.
// All implementations must embed UnimplementedDeleteClientServiceServer
// for forward compatibility
type DeleteClientServiceServer interface {
	DeleteClient(context.Context, *DeleteClientRequest) (*DeleteClientResponse, error)
	mustEmbedUnimplementedDeleteClientServiceServer()
}

// UnimplementedDeleteClientServiceServer must be embedded to have forward compatible implementations.
type UnimplementedDeleteClientServiceServer struct {
}

func (UnimplementedDeleteClientServiceServer) DeleteClient(context.Context, *DeleteClientRequest) (*DeleteClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteClient not implemented")
}
func (UnimplementedDeleteClientServiceServer) mustEmbedUnimplementedDeleteClientServiceServer() {}

// UnsafeDeleteClientServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to DeleteClientServiceServer will
// result in compilation errors.
type UnsafeDeleteClientServiceServer interface {
	mustEmbedUnimplementedDeleteClientServiceServer()
}

func RegisterDeleteClientServiceServer(s grpc.ServiceRegistrar, srv DeleteClientServiceServer) {
	s.RegisterService(&DeleteClientService_ServiceDesc, srv)
}

func _DeleteClientService_DeleteClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeleteClientServiceServer).DeleteClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DeleteClientService_DeleteClient_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeleteClientServiceServer).DeleteClient(ctx, req.(*DeleteClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// DeleteClientService_ServiceDesc is the grpc.ServiceDesc for DeleteClientService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var DeleteClientService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "delete_svc.DeleteClientService",
	HandlerType: (*DeleteClientServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeleteClient",
			Handler:    _DeleteClientService_DeleteClient_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "delete_svc.proto",
}
